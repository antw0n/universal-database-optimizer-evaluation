conn = new Mongo();
db = conn.getDB("{{ variables['mongo_db_name_s3'] }}");
{% if explain -%} 
printjson(db.{{ variables['mongo_C'] }}.explain("allPlansExecution").aggregate([
{% else %}
cursor = db.{{ variables['mongo_C'] }}.aggregate([
{% endif %}
    {$match: {c_mktsegment: "{{ variables['tpch']['q3']['c_mktsegment'] }}"}},
    {$lookup: {
	from: "{{ variables['mongo_OjL'] }}",
	localField: "_id",
	foreignField: "o_custkey",
	as: "orders",
    }},
    {$unwind: "$orders"},
    {$match: {"orders.o_orderdate":{ $lt: ISODate("{{ variables['tpch']['q3']['date'] }}T00:00:00Z")}}},
    { $project: {
    	o_orderkey: "$orders._id",
    	o_orderdate: "$orders.o_orderdate",
    	o_shippriority: "$orders.o_shippriority",
    	lineitems: { $filter: {
    	    input: "$orders.o_lineitems",
    	    as: "l",
    	    cond: {$gt: ["$$l.l_shipdate", ISODate("{{ variables['tpch']['q3']['date'] }}T00:00:00Z")]}
    	}}
    }},
    { $unwind: "$lineitems"},
    { $group: { 
    	_id: {l_orderkey:"$o_orderkey", o_orderdate: "$o_orderdate", o_shippriority: "$o_shippriority"},
    	revenue: {$sum: {$multiply: ["$lineitems.l_extendedprice", {$subtract: [1, "$lineitems.l_discount"]}]}}
    }},
    { $sort: { "revenue": -1, "_id.o_orderdate": 1}},
    { $limit : 10 }
{% if explain %}
], {
	allowDiskUse: true,
	maxTimeMS: {{ variables['max_time_ms'] }}
}));
{% else %}
], {
	allowDiskUse: true,
	maxTimeMS: {{ variables['max_time_ms'] }}
});
while ( cursor.hasNext() ) {
      printjson( cursor.next() );
}
{% endif %}